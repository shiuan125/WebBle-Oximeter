var spo2Dataset=[],piDataset=[],bpmDataset=[],countdownTimer=null,heartIcon=document.getElementById("heart-icon"),countdownElement=document.getElementById("countdown-timer"),resultOxiElement=document.getElementById("oximeter-result"),device=null,oxy500serviceUuid="cdeacb80-5235-4c07-8846-93a37ee6b86d",oxy500notifyCharacteristicUUID="cdeacb81-5235-4c07-8846-93a37ee6b86d",b4btServiceUUID="0000fff0-0000-1000-8000-00805f9b34fb",b4btNotifyCharacteristicUUID="0000fff1-0000-1000-8000-00805f9b34fb",b4btWriteCharacteristicUUID="0000fff2-0000-1000-8000-00805f9b34fb",isMonitor=!0;let ChromeSamples={log:function(){var e=Array.prototype.slice.call(arguments).map(function(e){return"string"==typeof e?e:JSON.stringify(e)}).join(" ");document.querySelector("#log").textContent+=e+"\n"},clearLog:function(){document.querySelector("#log").textContent=""},setStatus:function(e){document.querySelector("#status").textContent=e},setContent:function(e){for(var t=document.querySelector("#content");t.hasChildNodes();)t.removeChild(t.lastChild);t.appendChild(e)}},log=ChromeSamples.log;function isWebBluetoothEnabled(){return!!navigator.bluetooth||(log("Web Bluetooth API is not available in this browser!"),console.log("Web Bluetooth API is not available in this browser!"),!1)}async function toggleConnection(){try{return device?.gatt?.connected?device.gatt.disconnect():await connect(),!!device?.gatt?.connected}catch(e){console.error(e)}}async function connect(){console.log("connecting...");(device=await navigator.bluetooth.requestDevice({filters:[{name:"OXY500 BT"},{name:"JPO"},{name:"My Oximeter"},{name:"Medical Device"},{name:"Medical"},{name:"OXY550 BT"},{name:"B4 BT"}],optionalServices:["cdeacb80-5235-4c07-8846-93a37ee6b86d","cdeacb81-5235-4c07-8846-93a37ee6b86d","cdeacb82-5235-4c07-8846-93a37ee6b86d","0000fff0-0000-1000-8000-00805f9b34fb","0000fff1-0000-1000-8000-00805f9b34fb","0000fff2-0000-1000-8000-00805f9b34fb"]})).addEventListener("gattserverdisconnected",onDisconnected),console.log("connected to "+device.name),connectAndQueryData()}async function connectAndQueryData(){let e,t;var r;try{t="B4 BT"==device.name?(e=b4btServiceUUID,b4btWriteCharacteristicUUID):(e=oxy500serviceUuid,oxy500notifyCharacteristicUUID);var n=await device.gatt.connect(),o=(console.log("gatt connect"),await n.getPrimaryService(e));console.log("getPrimaryService");let a=await o.getCharacteristic(t);if(console.log("getCharacteristic"),"B4 BT"==device.name&&(r=await o.getCharacteristic(b4btNotifyCharacteristicUUID)),"B4 BT"==device.name){r.addEventListener("characteristicvaluechanged",b4handleData),r.startNotifications();var i=new Uint8Array([77,255,0,2,11,89]),c=(console.log("讀取設備資訊"),await a.writeValueWithResponse(i),new Uint8Array([77,255,0,2,5,83]));console.log("讀取設備版本"),await a.writeValueWithResponse(c);let e=new Uint8Array([77,255,0,2,12,90]);setTimeout(async()=>{console.log("查看時間"),await a.writeValueWithResponse(e)},1e3);var l=getHexDateTime(),s=calculateChecksum([77,255,0,8,13,parseInt(l.yearHex,16),parseInt(l.monthHex,16),parseInt(l.dayHex,16),parseInt(l.hourHex,16),parseInt(l.minuteHex,16),parseInt(l.secondHex,16)]);let t=new Uint8Array([77,255,0,8,13,parseInt(l.yearHex,16),parseInt(l.monthHex,16),parseInt(l.dayHex,16),parseInt(l.hourHex,16),parseInt(l.minuteHex,16),parseInt(l.secondHex,16),parseInt(s,16)]);setTimeout(async()=>{console.log("修改時間"),await a.writeValueWithResponse(t)},2e3);var u=calculateChecksum([77,255,0,9,0,0,0,0,0,0,0,253]);let n=new Uint8Array([77,255,0,9,0,0,0,0,0,0,0,253,parseInt(u,16)]),o=(setTimeout(async()=>{console.log("查詢量測記錄"),await a.writeValueWithResponse(n)},3e3),new Uint8Array([77,255,0,2,4,82]));setTimeout(async()=>{console.log("斷線指令"),a.writeValueWithResponse(o)},1e4)}else a.addEventListener("characteristicvaluechanged",handleData),a.startNotifications();showBluetoothIcon()}catch(e){console.error("在連接或查詢資料時發生錯誤:",e),"NotFoundError"===e.name?console.error("找不到指定的服務 UUID 或特徵值 UUID。請檢查 UUID 是否正確。"):"BluetoothError"===e.name?console.error("藍牙操作失敗，請確保設備已開啟且在範圍內。"):console.error("未知錯誤:",e)}}function b4handleData(e){let t=null,n=null,o=null,a=null;let r=null,i=null,c=null;var l=[],s=e.target.value,u=[];for(let e=0;e<s.byteLength;e++)u.push(s.getUint8(e));if(0<u.length){var[e]=u;if(77===e){if(58===u[1]?t="4G BPM":49===u[1]&&(t="3G BPM"),0===u[4]){n="Send the all history or current data to APP.";o=(u[3]-39)/10,0===u[5]&&(0==u[6]?a="BP_Single_MODE":1==u[6]?a="BP_Single_MODE + SW Afib ON":2==u[6]?a="BP_MAM_MODE":3==u[6]&&(a="BP_MAM_MODE + SW Afib ON"),times=u[7],1==u[8]?r="User1":2==u[8]?r="User2":3==u[8]&&(r="Guest"),0==u[9]?i="MAM weight":1==u[9]?i="MAM light":256==u[9]&&(i="No MAM function"));var e=10*o,d=converBpData(u.slice(42,42+e));for(let n=0;n<d.length;n++){var g=d[n][8].toString(2).padStart(8,"0").split(""),h=g[0],p=g[1],m=g[2];let e=null,t=(0==g[3]&&0==g[4]?e="BP_Single_MODE":0==g[3]&&1==g[4]?e="BP_Single_MODE+ SW AFib ON":1==g[3]&&0==g[4]?e="BP_MAM_MODE":1==g[3]&&1==g[4]&&(e="BP_MAM_MODE+SW AFib ON"),null);1==g[5]&&0==g[6]&&0==g[7]||1==g[5]&&0==g[6]&&1==g[7]?t="G-Sensor normal":1==g[5]&&1==g[6]&&0==g[7]?t="G-Sensor up":1==g[5]&&1==g[6]&&1==g[7]?t="G-Sensor down":1==g[5]&&0==g[6]&&0==g[7]?t="G-Sensor MAM up & down":0==g[5]&&(t="Without G-Sensor status"),l.push(`Systolic:${d[n][0]} Diastolic:${d[n][1]} Pulse:${d[n][2]} 20${d[n][3].toString().padStart(2,"0")}/${d[n][4].toString().padStart(2,"0")}/${d[n][5].toString().padStart(2,"0")} ${d[n][6].toString().padStart(2,"0")}:${d[n][7].toString().padStart(2,"0")} cuffok:${h} ihb:${p} afib:${m} mode:${e} g-sensor:`+t)}}else 5===u[4]?n="Send user ID and version data to APP.":11===u[4]?(n="Send device ID and info to APP.",c=(c=`${u[6].toString(16).padStart(2,"0")}:${u[7].toString(16).padStart(2,"0")}:${u[8].toString(16).padStart(2,"0")}:${u[9].toString(16).padStart(2,"0")}:${u[10].toString(16).padStart(2,"0")}:`+u[11].toString(16).padStart(2,"0")).toUpperCase()):12===u[4]?n="Send the device time to APP":129===u[4]?n="BPM reply ACK, the BPM has complete the work.":145===u[4]&&(n="BPM reply NACK, the BPM has not complete the work.");log(`Device:${t} CMD:${n} ${null!=c?"Mac Address:"+c:""} ${null!=o?"bpCount:"+o:""} ${null!=a?"Current Mode:"+a:""} ${""} ${null!=r?"User Number:"+r:""} ${null!=i?"MAM Version:"+i:""} `),0<l.length&&l.forEach((e,t)=>{log(""+e)})}console.log(u)}}function converBpData(t){var n=[];console.log(t);for(let e=0;e<t.length;e+=10){var o=t.slice(e,e+10);n.push(o)}return console.log(n),n}function handleData(e){var t,n,o,a,r,i,c=e.target.value,l=[];for(let e=0;e<c.byteLength;e++)l.push(c.getUint8(e));0<l.length&&([e]=l,129===e&&isMonitor?(console.log("血氧數值"+l),t=document.getElementById("spo2-value"),n=document.getElementById("bpm-value"),o=document.getElementById("pi-value"),a=127==l[2]?"--":l[2],r=255==l[1]?"--":l[1],i=0==l[3]?"--":(.1*l[3]).toFixed(1),t.innerHTML=`<p>${a}</p>`,n.innerHTML=`<p>${r}</p>`,o.innerHTML=`<p>${i}</p>`,heartIcon.classList.toggle("active",255!=l[1]),null===countdownTimer&&startCollectingData(),"--"!==a&&spo2Dataset.push(parseInt(a)),"--"!==r&&bpmDataset.push(parseInt(r)),"--"!==i&&piDataset.push(parseFloat(i))):130===e?console.log("血氧飽和度和脈率報警限"+l):128===e?(l.shift(),console.log(l),pushToDataQueue(l)):console.log(l))}function startCollectingData(){spo2Dataset=[],piDataset=[],bpmDataset=[];let e=30;countdownElement.innerText="倒數："+e,countdownTimer=setInterval(()=>{e--,countdownElement.innerText="倒數："+e,e<=0&&(clearInterval(countdownTimer),countdownTimer=null,countdownElement.innerText="倒數：0",calculateAverages())},1e3)}function calculateAverages(){var e=0<spo2Dataset.length?(spo2Dataset.reduce((e,t)=>e+t)/spo2Dataset.length).toFixed(1):"--",t=0<piDataset.length?(piDataset.reduce((e,t)=>e+t)/piDataset.length).toFixed(1):"--",n=0<bpmDataset.length?(bpmDataset.reduce((e,t)=>e+t)/bpmDataset.length).toFixed(1):"--";console.log(`30 秒數據收集結束。平均值： SPO2: ${e}, PI: ${t}, Pulse: `+n),isMonitor=!1,resultOxiElement.innerText=`30 秒數據收集結束。平均值： SPO2: ${e}, PI: ${t}, Pulse: `+n}function showBluetoothIcon(){document.getElementById("bl-icon").hidden=!1}function onDisconnected(){console.log("> Bluetooth Device disconnected"),document.getElementById("bl-icon").hidden=!0}function onConnectButtonClick(){isWebBluetoothEnabled()?(ChromeSamples.clearLog(),toggleConnection()):log("Web Bluetooth API is not available in this browser!")}function onDisconnectButtonClick(){device&&(console.log("Disconnecting from Bluetooth Device..."),device.gatt.connected?device.gatt.disconnect():console.log("> Bluetooth Device is already disconnected"))}function onReconnectButtonClick(){device&&(device.gatt.connected?console.log("> Bluetooth Device is already connected"):connectAndQueryData())}function getHexDateTime(){var e=new Date,t=(console.log(e),(e.getFullYear()%100).toString(16).padStart(2,"0"));return{yearHex:t,monthHex:(e.getMonth()+1).toString(16).padStart(2,"0"),dayHex:e.getDate().toString(16).padStart(2,"0"),hourHex:e.getHours().toString(16).padStart(2,"0"),minuteHex:e.getMinutes().toString(16).padStart(2,"0"),secondHex:e.getSeconds().toString(16).padStart(2,"0")}}function calculateChecksum(e){return(e.reduce((e,t)=>e+t,0)%256).toString(16).toUpperCase().padStart(2,"0")}